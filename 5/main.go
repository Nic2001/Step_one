//Разработать программу, которая будет последовательно отправлять значения в канал,
//а с другой стороны канала — читать. По истечению N секунд программа должна завершаться.
package main

import (
	"fmt"
	"time"
)

func main() {
	t := 0
	ch := make(chan int)
	fmt.Scan(&t)                               // задаём нужное нам количество секунд
	go giveData(ch)                            // запускаем функцию закидывания данных
	time.Sleep(time.Duration(t) * time.Second) // откладываем завершение программы на t секунд

}

func giveData(ch chan int) {
	go getData(ch)               // вызываем горутину чтения из канала
	for i := 0; i < 10000; i++ { // в цикле закидываем туда данные
		ch <- i
	}
}

func getData(ch chan int) {
	for {
		for val := range ch { // просто читаем данные из канала
			fmt.Println(val)
		}
	}
}

// кстати, опытным путём удалось выяснить, что за 1 секунду программа может сделать 7-8 тысяч таких операций
